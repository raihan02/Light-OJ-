#include <bits/stdc++.h>
using namespace std;
vector <int> ver[10005];
vector <int> top;
int check[10005];
void dfs_top_sort(int u)
{
    check[u] = 1;
    for(int i = 0; i < ver[u].size(); i++)
    {
        int v = ver[u][i];
        if(check[v] == 0)
        {
            dfs_top_sort(v);
        }
    }
    top.push_back(u);
}
void dfs(int u)
{
    check[u] = 1;
    for(int i = 0; i < ver[u].size(); i++)
    {
        if(check[ver[u][i]] == 0)
        {
            dfs(ver[u][i]);
        }
    }

}
int main()
{
    int tes , o = 0;
    cin >> tes;

    while(tes--)
    {
        o++;
        int x , y;
        cin >> x >> y;
        for(int i = 0; i < y; i++)
        {
            int a , b;
            cin >> a >> b;
            ver[a].push_back(b);
        }
        memset(check , 0 , sizeof check);
        int cnt = 0;
        for(int i = 1; i <= x; i++)
        {
            if(check[i] == 0)
            {
                dfs_top_sort(i);
            }
        }
        reverse(top.begin(), top.end());
        memset(check , 0, sizeof check);
        int c = 0;
        for(int i = 0; i < top.size(); i++)
        {
           if(check[top[i]] == 0)
           {
               c++;
               dfs(top[i]);
           }
        }
        printf("Case %d: %d\n", o , c);
       for(int i = 1; i <= x; i++) ver[i].clear();
       top.clear();

    }
}
